{"version":3,"sources":["./src/app/pages/live-logs/live-logs.module.ts","./src/app/pages/live-logs/live-logs.page.ts","./src/app/pages/live-logs/live-logs.page.html","./src/app/classes/log.ts"],"names":[],"mappings":"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","file":"pages-live-logs-live-logs-module.js","sourcesContent":["/* --- PAGES --- */\nimport { LiveLogsPage } from './live-logs.page';\n\n/* --- MODULES --- */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { OrderPipeModule } from 'src/app/pipes/order/order.module';\nimport { FilterPipeModule } from 'src/app/pipes/filter/filter.module';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatContentModule } from 'src/app/libs/mat-content/mat-content.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuButtonModule } from 'src/app/libs/mat-menu-button/mat-menu-button.module';\nimport { MatBackButtonModule } from 'src/app/libs/mat-back-button/mat-back-button.module';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LiveLogsPage\n    }\n];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        MatSortModule,\n        MatIconModule,\n        MatTableModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonModule,\n        OrderPipeModule,\n        MatTooltipModule,\n        FilterPipeModule,\n        MatToolbarModule,\n        MatContentModule,\n        MatFormFieldModule,\n        MatBackButtonModule,\n        MatMenuButtonModule,\n        ReactiveFormsModule,\n        MatProgressBarModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        LiveLogsPage\n    ]\n})\n\nexport class LiveLogsPageModule { }\n","import { Log } from 'src/app/classes/log';\nimport { Socket } from 'src/app/classes/socket';\nimport { environment } from 'src/environments/environment';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { OnInit, Component, OnDestroy } from '@angular/core';\n\n@Component({\n    selector: 'live-logs-page',\n    styleUrls: ['./live-logs.page.scss'],\n    templateUrl: './live-logs.page.html'\n})\n\nexport class LiveLogsPage implements OnInit, OnDestroy {\n\n    constructor() { }\n\n    public table: MatTableDataSource<any> = new MatTableDataSource<any>();\n    public columns: string[] = ['message', 'type', 'date'];\n    public loading: boolean = false;\n    public observers: any = {};\n\n    ngOnInit(): void {\n        const socket = new Socket(environment.socket, 'logs');\n\n        this.observers.data = socket.data.subscribe((event: any) => {\n            if (this.table.data.length >= 1000) {\n                this.table.data.pop();\n            };\n            this.table.data.unshift(event.result);\n            this.table.data = this.table.data.map(o => new Log(o));\n        });\n\n        this.observers.status = socket.status.subscribe((status: any) => {\n            if (status == 'disconnected') {\n                setTimeout(() => socket.reconnect(), 5000);\n            };\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.observers.data?.unsubscribe();\n        this.observers.status?.unsubscribe();\n    }\n\n}\n","<mat-toolbar>\n    <mat-menu-button></mat-menu-button>\n    \n    <mat-label class=\"spacer\">\n        Live Logs\n    </mat-label>\n</mat-toolbar>\n\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n\n<mat-content>\n    <table mat-table [dataSource]=\"table\">\n        <ng-container matColumnDef=\"message\">\n            <th mat-header-cell *matHeaderCellDef>\n                Message\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.message }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef>\n                Type\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span [class]=\"element.type\">\n                    {{ element.type }}\n                </span>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef>\n                Date\n            </th>\n            <td mat-cell *matCellDef=\"let element\">\n                {{ element.date | date : 'dd/MM/yyyy HH:mm:ss' }}\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columns; sticky: true;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n    </table>\n</mat-content>","export class Log {\n\n    public date: Date = new Date();;\n    public type: string = '';\n    public message: string = '';\n\n    constructor(args?: LOG) {\n        if (typeof (args) != 'undefined' && args != null) {\n            if (typeof (args.type) != 'undefined' && args.type != null) {\n                this.type = args.type;\n            };\n            if (typeof (args.date) != 'undefined' && args.date != null) {\n                this.date = new Date(args.date);\n            };\n            if (typeof (args.message) != 'undefined' && args.message != null) {\n                this.message = args.message;\n            };\n        }\n    }\n\n}\n\ninterface LOG {\n    date: Date;\n    type: string;\n    message: string;\n}\n"],"sourceRoot":"webpack:///"}