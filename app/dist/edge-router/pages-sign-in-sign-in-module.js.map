{"version":3,"sources":["./src/app/pages/sign-in/sign-in.page.ts","./src/app/pages/sign-in/sign-in.page.html","./src/app/pages/sign-in/sign-in.module.ts"],"names":[],"mappings":"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","file":"pages-sign-in-sign-in-module.js","sourcesContent":["import { Router } from '@angular/router';\nimport { ToastService } from 'src/app/services/toast/toast.service';\nimport { AdminService } from 'src/app/services/admin/admin.service';\nimport { FormErrorService } from 'src/app/services/form-error/form-error.service';\nimport { OnInit, Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'sign-in-page',\n    styleUrls: ['./sign-in.page.scss'],\n    templateUrl: './sign-in.page.html'\n})\n\nexport class SignInPage implements OnInit, OnDestroy {\n\n    constructor(private toast: ToastService, private router: Router, private service: AdminService, private formerror: FormErrorService) { }\n\n    public form: FormGroup = new FormGroup({\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        password: new FormControl(null, [Validators.required])\n    });\n    public errors: any = {\n        email: '',\n        password: ''\n    };\n    public loading: boolean = false;\n    private observers: any = {};\n\n    public async submit() {\n        this.loading = true;\n\n        const response = await this.service.authenticate(this.form.value);\n\n        if (response.ok) {\n            if (response.result.authenticated) {\n                this.router.navigate(['/devices'], {\n                    replaceUrl: true\n                });\n                this.toast.success('Sign in successful!');\n            } else {\n                this.toast.error('Invalid Credentials!');\n            };\n        } else {\n            this.toast.error(response.result.message);\n        };\n\n        this.loading = false;\n    }\n\n    ngOnInit(): void {\n        this.observers.form = this.form.valueChanges.subscribe(() => {\n            this.errors = this.formerror.validateForm(this.form, this.errors, true);\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.observers.form.unsubscribe();\n    }\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar>\n\n<mat-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"!loading && !form.invalid && submit()\">\n        <img src=\"./assets/icons/icon-512x512.png\" alt=\"biTid\" width=\"100\" height=\"100\" draggable=\"false\">\n\n        <h1>\n            Edge Router\n        </h1>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>\n                Email\n            </mat-label>\n\n            <input matInput type=\"email\" name=\"email\" placeholder=\"email\" formControlName=\"email\" required>\n\n            <mat-error *ngIf=\"errors.email\">\n                {{ errors.email }}\n            </mat-error>\n        </mat-form-field>\n        \n        <mat-form-field appearance=\"outline\">\n            <mat-label>\n                Password\n            </mat-label>\n\n            <input matInput type=\"password\" name=\"password\" placeholder=\"password\" formControlName=\"password\" required>\n\n            <mat-error *ngIf=\"errors.password\">\n                {{ errors.password }}\n            </mat-error>\n        </mat-form-field>\n\n        <button mat-flat-button type=\"submit\" color=\"primary\">\n            sign in\n        </button>\n    </form>\n</mat-content>","/* --- PAGES --- */\nimport { SignInPage } from './sign-in.page';\n\n/* --- MODULES --- */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatContentModule } from 'src/app/libs/mat-content/mat-content.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SignInPage\n    }\n];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatContentModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatProgressBarModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        SignInPage\n    ]\n})\n\nexport class SignInPageModule { }\n"],"sourceRoot":"webpack:///"}